// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vue_ts;

#nullable disable

namespace vue_ts.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("vue_ts.Models.DetailModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("mobileNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("nationality")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nicNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("vue_ts.Models.ImageModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NicBackPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NicFrontPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SelfiePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("customerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.ToTable("Images", (string)null);
                });

            modelBuilder.Entity("vue_ts.Models.Otp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTimeOffset>("ExpiresAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("OtpCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Otps", (string)null);
                });

            modelBuilder.Entity("vue_ts.Models.ImageModel", b =>
                {
                    b.HasOne("vue_ts.Models.DetailModel", "customer")
                        .WithOne("images")
                        .HasForeignKey("vue_ts.Models.ImageModel", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("vue_ts.Models.DetailModel", b =>
                {
                    b.Navigation("images")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
